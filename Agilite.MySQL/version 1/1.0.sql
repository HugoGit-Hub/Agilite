-- MySQL Script generated by MySQL Workbench
-- Sun Jan 15 18:57:58 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Agilite
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Agilite
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Agilite` DEFAULT CHARACTER SET utf8 ;
USE `Agilite` ;

-- -----------------------------------------------------
-- Table `Agilite`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Agilite`.`User` (
  `IdUser` INT NOT NULL AUTO_INCREMENT,
  `FirstNameUser` VARCHAR(100) NOT NULL,
  `LastNameUser` VARCHAR(100) NOT NULL,
  `EmailUser` VARCHAR(150) NOT NULL,
  `PasswordUser` VARCHAR(200) NOT NULL,
  `EnumRoleUser` INT NOT NULL,
  `DateCreationUser` VARCHAR(45) NOT NULL,
  `AgeUser` INT NULL,
  PRIMARY KEY (`IdUser`),
  UNIQUE INDEX `EmailUser_UNIQUE` (`EmailUser` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Agilite`.`Contact`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Agilite`.`Contact` (
  `IdContact` INT NOT NULL AUTO_INCREMENT,
  `NameContact` VARCHAR(150) NOT NULL,
  `ArchivedContact` TINYINT NOT NULL,
  PRIMARY KEY (`IdContact`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Agilite`.`Message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Agilite`.`Message` (
  `IdMessage` INT NOT NULL AUTO_INCREMENT,
  `TextMessage` VARCHAR(3000) NULL,
  PRIMARY KEY (`IdMessage`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Agilite`.`UserMessageContact`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Agilite`.`UserMessageContact` (
  `User_IdUser` INT NOT NULL,
  `Contact_IdContact` INT NOT NULL,
  `Message_IdMessage` INT NOT NULL,
  `DateTimeUserMessageContact` DATETIME NOT NULL,
  PRIMARY KEY (`User_IdUser`, `Contact_IdContact`, `Message_IdMessage`),
  INDEX `fk_User_has_Contact_Contact1_idx` (`Contact_IdContact` ASC) VISIBLE,
  INDEX `fk_User_has_Contact_User_idx` (`User_IdUser` ASC) VISIBLE,
  INDEX `fk_User_has_Contact_Message1_idx` (`Message_IdMessage` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_Contact_User`
    FOREIGN KEY (`User_IdUser`)
    REFERENCES `Agilite`.`User` (`IdUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Contact_Contact1`
    FOREIGN KEY (`Contact_IdContact`)
    REFERENCES `Agilite`.`Contact` (`IdContact`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Contact_Message1`
    FOREIGN KEY (`Message_IdMessage`)
    REFERENCES `Agilite`.`Message` (`IdMessage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Agilite`.`Team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Agilite`.`Team` (
  `IdTeam` INT NOT NULL AUTO_INCREMENT,
  `NameTeam` VARCHAR(100) NOT NULL,
  `NumberMembersTeam` INT NOT NULL,
  PRIMARY KEY (`IdTeam`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Agilite`.`TeamRole`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Agilite`.`TeamRole` (
  `idTeamRole` INT NOT NULL AUTO_INCREMENT,
  `TitleTeamRole` VARCHAR(50) NOT NULL,
  `AccessTeamRole` INT NOT NULL,
  PRIMARY KEY (`idTeamRole`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Agilite`.`UserTeamTeamRole`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Agilite`.`UserTeamTeamRole` (
  `User_IdUser` INT NOT NULL,
  `Team_IdTeam` INT NOT NULL,
  `TeamRole_idTeamRole` INT NOT NULL,
  `DateTimeUserTeamTeamRole` DATETIME NOT NULL,
  PRIMARY KEY (`User_IdUser`, `Team_IdTeam`, `TeamRole_idTeamRole`),
  INDEX `fk_User_has_Team_Team1_idx` (`Team_IdTeam` ASC) VISIBLE,
  INDEX `fk_User_has_Team_User1_idx` (`User_IdUser` ASC) VISIBLE,
  INDEX `fk_User_has_Team_TeamRole1_idx` (`TeamRole_idTeamRole` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_Team_User1`
    FOREIGN KEY (`User_IdUser`)
    REFERENCES `Agilite`.`User` (`IdUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Team_Team1`
    FOREIGN KEY (`Team_IdTeam`)
    REFERENCES `Agilite`.`Team` (`IdTeam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Team_TeamRole1`
    FOREIGN KEY (`TeamRole_idTeamRole`)
    REFERENCES `Agilite`.`TeamRole` (`idTeamRole`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Agilite`.`Project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Agilite`.`Project` (
  `IdProject` INT NOT NULL AUTO_INCREMENT,
  `Team_IdTeam` INT NOT NULL,
  `NameProject` VARCHAR(100) NOT NULL,
  `DateCreationProject` DATETIME NOT NULL,
  `DateEnded` VARCHAR(45) NULL,
  PRIMARY KEY (`IdProject`),
  INDEX `fk_Project_Team1_idx` (`Team_IdTeam` ASC) VISIBLE,
  CONSTRAINT `fk_Project_Team1`
    FOREIGN KEY (`Team_IdTeam`)
    REFERENCES `Agilite`.`Team` (`IdTeam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Agilite`.`Sprint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Agilite`.`Sprint` (
  `IdSprint` INT NOT NULL AUTO_INCREMENT,
  `Project_IdProject` INT NOT NULL,
  `NumberSprint` INT NOT NULL,
  `StartDateSprint` DATETIME NOT NULL,
  `EndDateSprint` DATETIME NOT NULL,
  PRIMARY KEY (`IdSprint`),
  INDEX `fk_Sprint_Project1_idx` (`Project_IdProject` ASC) VISIBLE,
  CONSTRAINT `fk_Sprint_Project1`
    FOREIGN KEY (`Project_IdProject`)
    REFERENCES `Agilite`.`Project` (`IdProject`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Agilite`.`Objective`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Agilite`.`Objective` (
  `IdObjective` INT NOT NULL AUTO_INCREMENT,
  `Sprint_IdSprint` INT NOT NULL,
  `NameObjective` VARCHAR(150) NOT NULL,
  `NumberObjective` INT NOT NULL,
  `EnumTypeObjective` INT NOT NULL,
  `TextObjective` VARCHAR(5000) NULL,
  PRIMARY KEY (`IdObjective`),
  INDEX `fk_Objective_Sprint1_idx` (`Sprint_IdSprint` ASC) VISIBLE,
  CONSTRAINT `fk_Objective_Sprint1`
    FOREIGN KEY (`Sprint_IdSprint`)
    REFERENCES `Agilite`.`Sprint` (`IdSprint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Agilite`.`Task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Agilite`.`Task` (
  `IdTask` INT NOT NULL AUTO_INCREMENT,
  `Objective_IdObjective` INT NOT NULL,
  `NameTask` VARCHAR(150) NOT NULL,
  `NumberTask` INT NOT NULL,
  `EnumTypeTask` INT NOT NULL,
  `EnumStateTask` INT NOT NULL,
  `TextTask` VARCHAR(5000) NULL,
  `StartLogTimeTask` DATETIME NULL,
  `EndLogTimeTask` DATETIME NULL,
  PRIMARY KEY (`IdTask`),
  INDEX `fk_Task_Objective1_idx` (`Objective_IdObjective` ASC) VISIBLE,
  CONSTRAINT `fk_Task_Objective1`
    FOREIGN KEY (`Objective_IdObjective`)
    REFERENCES `Agilite`.`Objective` (`IdObjective`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Agilite`.`Planning`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Agilite`.`Planning` (
  `idPlanning` INT NOT NULL AUTO_INCREMENT,
  `User_IdUser` INT NOT NULL,
  `StartDatePlanning` DATETIME NOT NULL,
  `EndDatePlanning` DATETIME NOT NULL,
  PRIMARY KEY (`idPlanning`),
  INDEX `fk_Planning_User1_idx` (`User_IdUser` ASC) VISIBLE,
  CONSTRAINT `fk_Planning_User1`
    FOREIGN KEY (`User_IdUser`)
    REFERENCES `Agilite`.`User` (`IdUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
